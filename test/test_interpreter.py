import pytest
import interpreter

def test_compute_bourdoncle_widenpoints_1():
    cfg = interpreter.MethodCFG('1', '8')
    cfg.add_control_loc('2')
    cfg.add_control_loc('3')
    cfg.add_control_loc('4')
    cfg.add_control_loc('5')
    cfg.add_control_loc('6')
    cfg.add_control_loc('7')
    cfg.add_control_loc('8')
    cfg.set_edge('1', '2', [], [])
    cfg.set_edge('2', '3', [], [])
    cfg.set_edge('2', '8', [], [])
    cfg.set_edge('3', '4', [], [])
    cfg.set_edge('4', '5', [], [])
    cfg.set_edge('4', '7', [], [])
    cfg.set_edge('5', '6', [], [])
    cfg.set_edge('6', '5', [], [])
    cfg.set_edge('6', '7', [], [])
    cfg.set_edge('7', '3', [], [])
    cfg.set_edge('7', '8', [], [])
    assert (cfg.compute_bourdoncle_widenpoints()
            == ['1', '2', ['3', '4', ['5', '6'], '7'], '8'])


def test_compute_bourdoncle_widenpoints_2():
    cfg = interpreter.MethodCFG('1', '6')
    cfg.add_control_loc('2')
    cfg.add_control_loc('3')
    cfg.add_control_loc('4')
    cfg.add_control_loc('5')
    cfg.add_control_loc('6')
    cfg.add_control_loc('1a')
    cfg.add_control_loc('2a')
    cfg.add_control_loc('3a')
    cfg.add_control_loc('4a')
    cfg.add_control_loc('5a')
    cfg.add_control_loc('6a')
    cfg.set_edge('1', '2', [], [])
    cfg.set_edge('1', '4', [], [])
    cfg.set_edge('2', '3', [], [])
    cfg.set_edge('3', '6', [], [])
    cfg.set_edge('4', '1a', [], [])
    cfg.set_edge('5', '6', [], [])
    cfg.set_edge('6', '5a', [], [])
    cfg.set_edge('1a', '2a', [], [])
    cfg.set_edge('1a', '4a', [], [])
    cfg.set_edge('2a', '3a', [], [])
    cfg.set_edge('3a', '6a', [], [])
    cfg.set_edge('4a', '1', [], [])
    cfg.set_edge('5a', '6a', [], [])
    cfg.set_edge('6a', '5', [], [])
    
    print cfg.compute_bourdoncle_widenpoints()
    assert (cfg.compute_bourdoncle_widenpoints()
            == [['1', '4', '1a', '4a'], '2a', '3a', '2', '3', ['6', '5a', '6a', '5']])
    print cfg.compute_bourdoncle_widenpoints(reverse=True)
    
    assert (cfg.compute_bourdoncle_widenpoints(reverse=True)
            == [['6', '5', '6a', '5a'], '3a', '2a', '3', '2', ['1', '4a', '1a', '4']])
    
